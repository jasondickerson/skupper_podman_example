---
- hosts: skupper_hosts
  gather_facts: no

  vars_files:
    - vars/vault.yml

  tasks:
    - name: Perform Skupper installation tasks
      block:
        - name: Check for skupper installation
          ansible.builtin.stat:
            path: /usr/local/bin/skupper
          register: skupper_binary

        - name: Install skupper
          ansible.builtin.copy:
            src: files/skupper
            dest: /usr/local/bin/skupper
            owner: root
            group: root
            mode: '0755'
          when: not skupper_binary.stat.exists

        - debug:
            var: services.values() | list | map(attribute='ports') | flatten + [ 55671 ]

        - name: Open Firewall Rules for skupper ingress
          ansible.posix.firewalld:
            port: "{{ item }}/tcp"
            permanent: true
            state: enabled
          loop: "{{ services.values() | list | map(attribute='ports') | flatten + [ 55671 ] }}"
          when: init['ingressHosts'] is defined and (init['ingressHosts'] | length > 0)

      become: true

    - name: Ensure User skupper_config directory exists
      ansible.builtin.file:
        path: skupper_config
        state: directory
        mode: '0750'
 
    - name: Store Client Token file
      ansible.builtin.copy:
        content: "{{ hostvars[item['host']]['generatedToken'] }}"
        dest: "skupper_config/{{ item['host'] }}_token"
        mode: '0640'
        backup: true
      loop: "{{ links }}"
      when: links is defined and (links | length > 0)

    - name: Validate User linger is enabled
      ansible.builtin.stat:
        path: "/var/lib/systemd/linger/{{ ansible_ssh_user }}"
      register: user_linger_file

    - name: Ensure linger is enabled for the user
      ansible.builtin.command:
        cmd: "loginctl enable-linger"
      register: enable_linger
      when: not user_linger_file.stat.exists

    - name: Gather User facts
      setup:
        gather_subset:
          - distribution

    - name: Ensure Podman API is running on RHEL
      ansible.builtin.systemd:
        name: podman.socket
        state: started
        enabled: yes
        scope: user
      when: ansible_facts.distribution == 'RedHat'

    - name: Start Podman API on Fedora if needed
      block:
        - name: Get UID
          ansible.builtin.command:
            cmd: "id -u"
          changed_when: false
          register: my_uid

        - name: Validate Podman API is running
          ansible.builtin.stat:
            path: "/run/user/{{ my_uid.stdout }}/podman/podman.sock"
          register: podman_socket

        - name: Start Podman API
          ansible.builtin.command:
            cmd: "nohup podman system service --time=0 unix:///run/user/{{ my_uid.stdout }}/podman/podman.sock"
          register: podman_api_pid
          async: 5
          poll: 0
          when: not podman_socket.stat.exists

      when: ansible_facts.distribution == 'Fedora'
        
    - name: Configure Skupper
      ansible.builtin.import_role:
        name: skupper.network.skupper

    - name: Save Skupper Ingress Host Token File
      ansible.builtin.copy:
        content: "{{ generatedToken }}"
        dest: "skupper_config/{{ token_output_file }}"
        backup: true
      when: token_output_file is defined and token_output_file | length() > 0

